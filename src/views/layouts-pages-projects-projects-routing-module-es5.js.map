{"version":3,"sources":["webpack:///./src/app/layouts/pages/projects/pages/project/project.component.html","webpack:///./src/app/layouts/pages/projects/projects.component.html","webpack:///./src/app/layouts/pages/projects/pages/project/project.component.scss","webpack:///./src/app/layouts/pages/projects/pages/project/project.component.ts","webpack:///./src/app/layouts/pages/projects/projects-routing.module.ts","webpack:///./src/app/layouts/pages/projects/projects.component.scss","webpack:///./src/app/layouts/pages/projects/projects.component.ts","webpack:///./src/app/layouts/pages/projects/projects.module.ts","webpack:///./src/app/layouts/pages/projects/projects.service.ts","webpack:///./src/app/shared/resolvers/project.resolve.ts"],"names":[],"mappings":"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","file":"layouts-pages-projects-projects-routing-module-es5.js","sourcesContent":["module.exports = \"<div>\\r\\n  <h3>{{project.name}}</h3>\\r\\n  <button (click)=\\\"addTask()\\\">+</button>\\r\\n</div>\\r\\n<h4>tasks</h4>\\r\\n<ul *ngIf=\\\"!loading\\\">\\r\\n  <li *ngFor=\\\"let task of project.tasks.reverse()\\\">{{task.name}}</li>\\r\\n</ul>\\r\\n\"","module.exports = \"<button (click)=\\\"createRandomProject()\\\">Add random project</button>\\r\\n<div>\\r\\n  <ul *ngIf=\\\"projects\\\">\\r\\n    <li *ngFor=\\\"let project of projects.reverse()\\\"><a [routerLink]=\\\"'/projects/'+project._id\\\">{{project.name + '||' + project._id}}</a></li>\\r\\n  </ul>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dHMvcGFnZXMvcHJvamVjdHMvcGFnZXMvcHJvamVjdC9wcm9qZWN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\r\nimport {BaseComponent} from '../../../../../shared/components/base.component';\r\nimport {Project} from '../../../../../shared/interfaces/project.interface';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {ProjectsService} from '../../projects.service';\r\n\r\n@Component({\r\n  selector: 'app-project',\r\n  templateUrl: './project.component.html',\r\n  styleUrls: ['./project.component.scss']\r\n})\r\nexport class ProjectComponent extends BaseComponent implements OnInit {\r\n  project: Project;\r\n  loading: boolean = false;\r\n\r\n  constructor(public activatedRoute: ActivatedRoute, public projectsService: ProjectsService) {\r\n    super();\r\n  }\r\n\r\n  addTask() {\r\n    this.loading = true;\r\n    const pack = {\r\n      name: 'testTaskOKCreate ' + Math.random(),\r\n      project: this.project._id\r\n    };\r\n    const subDataAddTask = this.projectsService.addTaskToProject(pack).subscribe((task: any) => {\r\n      this.project.tasks.push(task);\r\n      this.loading = false;\r\n    });\r\n    this.someSubscriptions.add(subDataAddTask);\r\n  }\r\n\r\n  ngOnInit() {\r\n    const subData = this.activatedRoute.data.subscribe((project: { project: Project }) => {\r\n      this.project = project.project;\r\n      this.loading = true;\r\n      const subDataTasks = this.projectsService.getTasksOfProject(this.project._id).subscribe((tasks: any) => {\r\n        this.project.tasks = tasks;\r\n        this.loading = false;\r\n      });\r\n      this.someSubscriptions.add(subDataTasks);\r\n    });\r\n    this.someSubscriptions.add(subData);\r\n  }\r\n\r\n}\r\n","import {RouterModule, Routes} from '@angular/router';\r\nimport {NgModule} from '@angular/core';\r\nimport {ProjectsModule} from './projects.module';\r\nimport {ProjectsComponent} from './projects.component';\r\nimport {ProjectComponent} from './pages/project/project.component';\r\nimport {ProjectResolve} from '../../../shared/resolvers/project.resolve';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: ProjectsComponent\r\n  },\r\n  {\r\n    path: ':project', component: ProjectComponent, resolve: {project: ProjectResolve}\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [RouterModule.forChild(routes), ProjectsModule],\r\n})\r\nexport class ProjectsRoutingModule {\r\n}\r\n\r\n\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dHMvcGFnZXMvcHJvamVjdHMvcHJvamVjdHMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {ProjectsService} from './projects.service';\r\nimport {Project} from '../../../shared/interfaces/project.interface';\r\n\r\n@Component({\r\n  selector: 'app-projects',\r\n  templateUrl: './projects.component.html',\r\n  styleUrls: ['./projects.component.scss']\r\n})\r\nexport class ProjectsComponent implements OnInit {\r\n  projects: Project[];\r\n\r\n  constructor(public projectsService: ProjectsService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getProjects();\r\n  }\r\n\r\n  createRandomProject() {\r\n    const pack = {name: 'superProjectNumber-' + Math.random()};\r\n    this.projectsService.createProject(pack).subscribe(res => {\r\n      this.projects.push(res);\r\n    });\r\n  }\r\n\r\n  getProjects() {\r\n    this.projectsService.projects().subscribe(res => {\r\n      this.projects = res;\r\n    });\r\n  }\r\n}\r\n","import {ProjectsComponent} from './projects.component';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport { ProjectComponent } from './pages/project/project.component';\r\nimport {RouterModule} from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProjectsComponent,\r\n    ProjectComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    CommonModule,\r\n    RouterModule\r\n  ]\r\n})\r\nexport class ProjectsModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BaseHttpService} from '../../../shared/services/base-http.service';\r\nimport {map} from 'rxjs/operators';\r\nimport {Project} from '../../../shared/interfaces/project.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n\r\n  constructor(public baseHttp: BaseHttpService) {\r\n  }\r\n\r\n  projects() {\r\n    return this.baseHttp.get('/projects')\r\n      .pipe(map(resp => resp as Project[]));\r\n  }\r\n\r\n  createProject(pack) {\r\n    return this.baseHttp.post('/projects', pack)\r\n      .pipe(map(resp => resp as Project));\r\n  }\r\n\r\n  getProject(id) {\r\n    return this.baseHttp.get('/projects/' + id)\r\n      .pipe(map(resp => resp as Project));\r\n  }\r\n  getTasksOfProject(id){\r\n    return this.baseHttp.get('/projects/' + id + '/tasks')\r\n      .pipe(map(resp => resp as any));\r\n  }\r\n\r\n  addTaskToProject(pack){\r\n    return this.baseHttp.post('/tasks',pack)\r\n      .pipe(map(resp => resp as any));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, Resolve} from '@angular/router';\r\nimport {Project} from '../interfaces/project.interface';\r\nimport {ProjectsService} from '../../layouts/pages/projects/projects.service';\r\nimport {BaseComponent} from '../components/base.component';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {Observable, of} from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectResolve extends BaseComponent implements Resolve<Project> {\r\n\r\n  constructor(public projectsService: ProjectsService) {\r\n    super();\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    const id = route.paramMap.get('project');\r\n    if (!id) {\r\n      const error = {message: 'not_found'};\r\n      return this.errorHandle(error);\r\n    }\r\n    return this.projectsService.getProject(id).pipe(\r\n      catchError(error => {\r\n        return this.errorHandle(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  errorHandle(error: any) {\r\n    this.router.navigate(['/projects']);\r\n    return of({data: null, error: error.message});\r\n  }\r\n}\r\n"],"sourceRoot":""}